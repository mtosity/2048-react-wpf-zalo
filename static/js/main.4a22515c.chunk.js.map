{"version":3,"sources":["game_algo.tsx","utils/state.tsx","game_redux.tsx","components/Box.tsx","utils/converter.tsx","components/Boxes.tsx","utils/helper.tsx","components/Game.tsx","components/Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Move","state","gameOver","boxes","title","com_ani","InitRandomAlgo","result_boxes","coor_ran","i","new_ran","Math","floor","random","push","ActionType","MoveAlgo","Dir","changed","Up","j","next","combindedNext","last_num","length","q","n_l","b_l","Down","Left","Right","GenerRandomAlgo","point_zero","pz_length","chosenPoint","ResetComAniAlgo","forEach","row","box","store","createStore","JSON","parse","stringify","INIT_STATE","action","type","InitRandom","MoveUp","MoveDown","MoveLeft","MoveRight","ResetComAni","ResetAll","Dispatcher","dispatch","initRandom","moveUp","moveDown","moveLeft","moveRight","resetComAni","resetAll","this","Box","boxinfo","color","titleColor","titleSize","toString","convertTitleToBoxInfo","useState","toggle","x","useSpring","from","config","duration","useEffect","div","className","style","Object","assign","backgroundColor","transform","interpolate","range","output","fontSize","Boxes","map","y","key","checkGameOver","num_row","num_col","Game","useSelector","useDispatch","dispatcher","downHandler","isArrow","window","addEventListener","removeEventListener","Swal","fire","icon","handlers","useSwipeable","onSwipedLeft","e","onSwipedUp","onSwipedDown","onSwipedRight","preventDefaultTouchmoveEvent","trackMouse","trackTouch","Header","onClick","value","App","width","height","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a22515c.chunk.js","sourcesContent":["import { BoxInt } from \"./utils/state\";\n\nexport const InitRandomAlgo = (\n  boxes: Array<Array<BoxInt>>\n): Array<Array<BoxInt>> => {\n  const result_boxes = [...boxes];\n  let coor_ran = [];\n  for (let i = 0; i < 4; i++) {\n    let new_ran = Math.floor(Math.random() * 4);\n    coor_ran.push(new_ran);\n  }\n  if (coor_ran[0] === coor_ran[2] && coor_ran[1] === coor_ran[3]) {\n    coor_ran[0] = (coor_ran[0] + 1) % 4;\n  }\n  result_boxes[coor_ran[0]][coor_ran[1]] = {\n    ...result_boxes[coor_ran[0]][coor_ran[1]],\n    title: 2,\n    com_ani: true,\n  };\n  result_boxes[coor_ran[2]][coor_ran[3]] = {\n    ...result_boxes[coor_ran[2]][coor_ran[3]],\n    title: 2,\n    com_ani: true,\n  };\n  return result_boxes;\n};\n\nexport enum Move {\n  Left,\n  Right,\n  Up,\n  Down\n}\n\nexport const MoveAlgo = (\n  boxes: Array<Array<BoxInt>>,\n  Dir: Move\n): Array<Array<BoxInt>> => {\n  const result_boxes = [...boxes];\n  let changed = false;\n  //===== Move up ===\n  if (Dir === Move.Up) {\n    for (let j = 0; j < 4; j++) {\n      let next = [];\n      let combindedNext = []\n      let last_num = 0;\n      for (let i = 0; i < 4; i++) {\n        if (boxes[i][j].title !== 0) {\n          if (last_num === 0) {\n            last_num = boxes[i][j].title;\n          } else {\n            if (boxes[i][j].title === last_num) {\n              if (changed === false) {\n                changed = true;\n              }\n              next.push(last_num * 2);\n              combindedNext.push(next.length - 1);\n              last_num = 0;\n            } else {\n              next.push(last_num);\n              last_num = boxes[i][j].title;\n            }\n          }\n        } else {\n          if (changed === false) {\n            for (let q = i; q < 4; q++) {\n              if (boxes[q][j].title !== 0) {\n                changed = true;\n              }\n            }\n          }\n        }\n      }\n      if (last_num !== 0) {\n        next.push(last_num);\n      }\n      let n_l = next.length;\n      for (let i = 0; i < n_l; i++) {\n        result_boxes[i][j].title = next[i];\n      }\n      for (let i = n_l; i < 4; i++) {\n        result_boxes[i][j].title = 0;\n      }\n      let b_l = combindedNext.length;\n      for(let i = 0; i < b_l; i++){\n        result_boxes[combindedNext[i]][j].com_ani = true;\n      }\n    }\n  }\n  //===== Move down ===\n  if (Dir === Move.Down) {\n    for (let j = 0; j < 4; j++) {\n      let next = [];\n      let combindedNext = [];\n      let last_num = 0;\n      for (let i = 3; i >= 0; i--) {\n        if (boxes[i][j].title !== 0) {\n          if (last_num === 0) {\n            last_num = boxes[i][j].title;\n          } else {\n            if (boxes[i][j].title === last_num) {\n              if (changed === false) {\n                changed = true;\n              }\n              next.push(last_num * 2);\n              combindedNext.push(next.length - 1);\n              last_num = 0;\n            } else {\n              next.push(last_num);\n              last_num = boxes[i][j].title;\n            }\n          }\n        } else {\n          if (changed === false) {\n            for (let q = i; q >= 0; q--) {\n              if (boxes[q][j].title !== 0) {\n                changed = true;\n              }\n            }\n          }\n        }\n      }\n      if (last_num !== 0) {\n        next.push(last_num);\n      }\n      let n_l = next.length;\n      for (let i = 0; i < n_l; i++) {\n        result_boxes[3 - i][j].title = next[i];\n      }\n      for (let i = 0; i < 4 - n_l; i++) {\n        result_boxes[i][j].title = 0;\n      }\n      let b_l = combindedNext.length;\n      for(let i = 0; i < b_l; i++){\n        result_boxes[3 - combindedNext[i]][j].com_ani = true;\n      }\n    }\n  }\n  //===== Move Left ===\n  if (Dir === Move.Left) {\n    for (let i = 0; i < 4; i++) {\n      let next = [];\n      let combindedNext = [];\n      let last_num = 0;\n      for (let j = 0; j < 4; j++) {\n        if (boxes[i][j].title !== 0) {\n          if (last_num === 0) {\n            last_num = boxes[i][j].title;\n          } else {\n            if (boxes[i][j].title === last_num) {\n              if (changed === false) {\n                changed = true;\n              }\n              next.push(last_num * 2);\n              combindedNext.push(next.length - 1);\n              last_num = 0;\n            } else {\n              next.push(last_num);\n              last_num = boxes[i][j].title;\n            }\n          }\n        } else {\n          if (changed === false) {\n            for (let q = j; q < 4; q++) {\n              if (boxes[i][q].title !== 0) {\n                changed = true;\n              }\n            }\n          }\n        }\n      }\n      if (last_num !== 0) {\n        next.push(last_num);\n      }\n      let n_l = next.length;\n      for (let j = 0; j < n_l; j++) {\n        result_boxes[i][j].title = next[j];\n      }\n      for (let j = n_l; j < 4; j++) {\n        result_boxes[i][j].title = 0;\n      }\n      let b_l = combindedNext.length;\n      for(let j = 0; j < b_l; j++){\n        result_boxes[i][combindedNext[j]].com_ani = true;\n      }\n    }\n  }\n  //===== Move Right ===\n  if (Dir === Move.Right) {\n    for (let i = 0; i < 4; i++) {\n      let next = [];\n      let combindedNext = [];\n      let last_num = 0;\n      for (let j = 3; j >= 0; j--) {\n        if (boxes[i][j].title !== 0) {\n          if (last_num === 0) {\n            last_num = boxes[i][j].title;\n          } else {\n            if (boxes[i][j].title === last_num) {\n              if (changed === false) {\n                changed = true;\n              }\n              next.push(last_num * 2);\n              combindedNext.push(next.length - 1);\n              last_num = 0;\n            } else {\n              next.push(last_num);\n              last_num = boxes[i][j].title;\n            }\n          }\n        } else {\n          if (changed === false) {\n            for (let q = j; q >= 0; q--) {\n              if (boxes[i][q].title !== 0) {\n                changed = true;\n              }\n            }\n          }\n        }\n      }\n      if (last_num !== 0) {\n        next.push(last_num);\n      }\n      let n_l = next.length;\n      for (let j = 0; j < n_l; j++) {\n        result_boxes[i][3 - j].title = next[j];\n      }\n      for (let j = 3 - n_l; j >= 0; j--) {\n        result_boxes[i][j].title = 0;\n      }\n      let b_l = combindedNext.length;\n      for(let j = 0; j < b_l; j++){\n        result_boxes[i][3 - combindedNext[j]].com_ani = true;\n      }\n    }\n  }\n\n  if (changed) {\n    return GenerRandomAlgo(result_boxes);\n  } else {\n    return result_boxes;\n  }\n};\n\nexport const GenerRandomAlgo = (\n  boxes: Array<Array<BoxInt>>\n): Array<Array<BoxInt>> => {\n  let point_zero = [];\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      if (boxes[i][j].title === 0) {\n        point_zero.push({\n          i,\n          j\n        });\n      }\n    }\n  }\n  let pz_length = point_zero.length;\n  if (pz_length > 0) {\n    let chosenIndexPZ = Math.floor(Math.random() * pz_length);\n    let chosenPoint = point_zero[chosenIndexPZ];\n    boxes[chosenPoint.i][chosenPoint.j].title = 2;\n    boxes[chosenPoint.i][chosenPoint.j].com_ani = true;\n  }\n  return boxes;\n};\n\n\nexport const ResetComAniAlgo = (\n  boxes: Array<Array<BoxInt>>\n): Array<Array<BoxInt>> => {\n  const result_boxes = [...boxes];\n  boxes.forEach(row => {\n    row.forEach(box => {\n      box.com_ani = false\n    })\n  })\n  return result_boxes;\n};","export interface BoxInt {\n  title: number;\n  com_ani: boolean;\n}\n\nexport interface StateInt {\n  gameOver: boolean\n  boxes: Array<Array<BoxInt>>;\n}\n\nexport const box: BoxInt = {\n  title: 0,\n  com_ani: false //combined animation\n};\n\nexport const box2: BoxInt = {\n  title: 2,\n  com_ani: false //combined animation\n};\n\nexport const state: StateInt = {\n  gameOver: false,\n  boxes: [\n    [\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      }\n    ],\n    [\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      }\n    ],\n    [\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      }\n    ],\n    [\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      },\n      {\n        title: 0,\n        com_ani: false\n      }\n    ]\n  ]\n};\n","import { createStore, Action, Reducer, Dispatch } from \"redux\";\nimport { state as INIT_STATE, StateInt } from \"./utils/state\";\nimport { InitRandomAlgo, MoveAlgo, Move, ResetComAniAlgo } from \"./game_algo\";\n\nexport enum ActionType {\n  MoveUp,\n  MoveDown,\n  MoveLeft,\n  MoveRight,\n  InitRandom,\n  ResetComAni,\n  ResetAll\n}\n\nexport interface DispatchActionInt extends Action<ActionType> {\n  payload?: Partial<StateInt>;\n}\n\nconst reducer: Reducer<StateInt, DispatchActionInt> = (\n  state = JSON.parse(JSON.stringify(INIT_STATE)), // copy a fking new object of INIT STATE\n  action\n) => {\n  switch (action.type) {\n    case ActionType.InitRandom:\n      return { ...state, boxes: InitRandomAlgo(state.boxes) };\n    case ActionType.MoveUp:\n      return { ...state, boxes: MoveAlgo(state.boxes, Move.Up) };\n    case ActionType.MoveDown:\n      return { ...state, boxes: MoveAlgo(state.boxes, Move.Down) };\n    case ActionType.MoveLeft:\n      return { ...state, boxes: MoveAlgo(state.boxes, Move.Left) };\n    case ActionType.MoveRight:\n      return { ...state, boxes: MoveAlgo(state.boxes, Move.Right) };\n    case ActionType.ResetComAni:\n      return { ...state, boxes: ResetComAniAlgo(state.boxes) };\n    case ActionType.ResetAll:\n      return JSON.parse(JSON.stringify(INIT_STATE)); // copy a fking new object of INIT STATE\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer);\n\nexport class Dispatcher {\n  private readonly dispatch: Dispatch<DispatchActionInt>;\n  constructor(dispatch: Dispatch<DispatchActionInt>) {\n    this.dispatch = dispatch;\n  }\n  initRandom = () => this.dispatch({ type: ActionType.InitRandom });\n  moveUp = () => this.dispatch({ type: ActionType.MoveUp });\n  moveDown = () => this.dispatch({ type: ActionType.MoveDown });\n  moveLeft = () => this.dispatch({ type: ActionType.MoveLeft });\n  moveRight = () => this.dispatch({ type: ActionType.MoveRight });\n  resetComAni = () => this.dispatch({ type: ActionType.ResetComAni });\n  resetAll = () => this.dispatch({ type: ActionType.ResetAll });\n}\n","import React, {useEffect, useState} from \"react\";\nimport \"../style/box.css\";\nimport { BoxInt } from \"../utils/state\";\nimport { convertTitleToBoxInfo } from \"../utils/converter\";\nimport {useSpring, animated} from 'react-spring'\n\ninterface BoxProps {\n  box: BoxInt;\n}\n\nconst Box: React.FC<BoxProps> = ({ box }: BoxProps) => {\n  const {com_ani} = box\n  const {title, color, titleColor, titleSize} = convertTitleToBoxInfo(box.title)\n\n  const [state, toggle] = useState(true)\n  const { x } = useSpring({ from: { x: 1 }, x: state ? 1 : 0, config: { duration: 170 } })\n\n\n  useEffect(() => {\n    if(com_ani === true){\n      // console.log('object')\n      toggle(!state)\n    }\n  }, [com_ani, state])\n  return (\n    <animated.div className=\"box\" style={Object.assign({backgroundColor: color}, {\n      // opacity: x.interpolate({ range: [0, 1], output: [0.3, 1] }),\n      transform: x\n        .interpolate({\n          // range: [0, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 1],\n          // output: [1, 0.97, 0.9, 1.1, 0.9, 1.1, 1.03, 1]\n          range: [0, 0.5, 1],\n          output: [1, 1.23, 1]\n        })\n        .interpolate(x => `scale(${x})`),\n\n    })} >\n<p style={{color: titleColor, fontSize: titleSize}} className=\"title\">{title}</p>\n    </animated.div>\n  );\n};\nexport default Box;\n","export interface BoxInfoInt {\n  title: string;\n  color: string;\n  titleColor: string;\n  titleSize: string;\n}\n\nexport function convertTitleToBoxInfo(title: number): BoxInfoInt {\n  let boxinfo = {\n    title: \"\",\n    color: \"\",\n    titleColor: \"#F9F6F2\",\n    titleSize: \"1vw\"\n  } as BoxInfoInt;\n  boxinfo.title = title === 0 ? \"\" : title.toString();\n  switch (title) {\n    case 0:\n      boxinfo.color = \"#CCC0B4\";\n      break;\n    case 2:\n      boxinfo.color = \"#EEE4DA\";\n      boxinfo.titleColor = \"#776E65\"\n      boxinfo.titleSize = \"10vmin\"\n      break;\n    case 4:\n      boxinfo.color = \"#EDE0C8\";\n      boxinfo.titleColor = \"#776E65\"\n      boxinfo.titleSize = \"10vmin\"\n      break;\n    case 8:\n      boxinfo.color = \"#F2B179\";\n      boxinfo.titleSize = \"10vmin\"\n      break;\n    case 16:\n      boxinfo.color = \"#F59563\";\n      boxinfo.titleSize = \"9vmin\"\n      break;\n    case 32:\n      boxinfo.color = \"#F67C5F\";\n      boxinfo.titleSize = \"9vmin\"\n      break;\n    case 64:\n      boxinfo.color = \"#F65E3B\";\n      boxinfo.titleSize = \"9vmin\"\n      break;\n    case 128:\n      boxinfo.color = \"#EDCF72\";\n      boxinfo.titleSize = \"7vmin\"\n      break;\n    case 256:\n      boxinfo.color = \"#EDCC61\";\n      boxinfo.titleSize = \"7vmin\"\n      break;\n    case 512:\n      boxinfo.color = \"#EDC850\";\n      boxinfo.titleSize = \"7vmin\"\n      break;\n    case 1024:\n      boxinfo.color = \"#EDC53F\";\n      boxinfo.titleSize = \"5vmin\"\n      break;\n    case 2048:\n      boxinfo.color = \"#EDC22E\";\n      boxinfo.titleSize = \"5vmin\"\n      break;\n    default:\n      boxinfo.color = \"#000\";\n      boxinfo.titleSize = \"4vmin\"\n      break;\n  }\n  return boxinfo;\n}","import React from \"react\";\nimport Box from \"./Box\";\nimport { BoxInt } from \"../utils/state\";\nimport \"../style/boxes.css\";\n\ninterface BoxesStateInt {\n  boxes: Array<Array<BoxInt>>\n} \n\nconst Boxes: React.FC<BoxesStateInt> = ({boxes}: BoxesStateInt) => {\n  return (\n    <div className=\"game-board\">\n      {boxes.map((row, y) => {\n        return (\n          <div className=\"row\" key={y}>\n            {row.map((box, x) => {\n              return <Box box={box} key={y * 4 + x} />;\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Boxes;\n","import {BoxInt} from '../utils/state'\n\nexport function checkGameOver(boxes: Array<Array<BoxInt>>): boolean{\n    let num_row = boxes.length\n    let num_col = boxes.length\n    //loop to find 0\n    for(let i = 0; i<num_row;i++){\n        for(let j = 0; j<num_row;j++){\n            if(boxes[i][j].title === 0){\n                return false\n            }\n        }\n    }\n    //loop the row\n    for(let i = 0; i<num_row;i++){\n        for(let j = 1; j < num_col; j++){\n            if(boxes[i][j].title === boxes[i][j-1].title){\n                return false\n            }\n        }\n    }\n    //loop the col\n    for(let j = 0; j<num_row;j++){\n        for(let i = 1; i < num_col; i++){\n            if(boxes[i][j].title === boxes[i-1][j].title){\n                return false\n            }\n        }\n    }\n\n    return true\n}","import React, { useEffect } from \"react\";\nimport \"../style/game.css\";\nimport Boxes from \"../components/Boxes\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { StateInt, BoxInt } from \"../utils/state\";\nimport { Dispatcher } from \"../game_redux\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { checkGameOver } from \"../utils/helper\";\nimport Swal from \"sweetalert2\";\n\nconst Game: React.FC = () => {\n  const boxes: Array<Array<BoxInt>> = useSelector<\n    StateInt,\n    Array<Array<BoxInt>>\n  >(state => state.boxes);\n  const dispatch = useDispatch();\n  const dispatcher = new Dispatcher(dispatch);\n\n  useEffect(() => {\n    dispatcher.initRandom();\n    dispatcher.resetComAni();\n    const downHandler = ({ key }: { key: string }) => {\n      let isArrow = false;\n      if (key === \"ArrowUp\") {\n        dispatcher.moveUp();\n        isArrow = true;\n      }\n      if (key === \"ArrowDown\") {\n        dispatcher.moveDown();\n        isArrow = true;\n      }\n      if (key === \"ArrowLeft\") {\n        dispatcher.moveLeft();\n        isArrow = true;\n      }\n      if (key === \"ArrowRight\") {\n        dispatcher.moveRight();\n        isArrow = true;\n      }\n      if (isArrow) {\n        dispatcher.resetComAni();\n      }\n    };\n    window.addEventListener(\"keydown\", downHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n    };\n  }, []);\n  useEffect(() => {\n    if (checkGameOver(boxes)) {\n      Swal.fire({\n        icon: \"error\",\n        title: \"GAME OVER\"\n      });\n    }\n  }, [boxes]);\n  //swipe\n  const handlers = useSwipeable({\n    onSwipedLeft: e => {\n      dispatcher.moveLeft();\n      dispatcher.resetComAni();\n      if (checkGameOver(boxes)) {\n        Swal.fire({\n          icon: \"error\",\n          title: \"GAME OVER\"\n        });\n      }\n    },\n    onSwipedUp: e => {\n      dispatcher.moveUp();\n      dispatcher.resetComAni();\n      if (checkGameOver(boxes)) {\n        Swal.fire({\n          icon: \"error\",\n          title: \"GAME OVER\"\n        });\n      }\n    },\n    onSwipedDown: e => {\n      dispatcher.moveDown();\n      dispatcher.resetComAni();\n      if (checkGameOver(boxes)) {\n        Swal.fire({\n          icon: \"error\",\n          title: \"GAME OVER\"\n        });\n      }\n    },\n    onSwipedRight: e => {\n      dispatcher.moveRight();\n      dispatcher.resetComAni();\n      if (checkGameOver(boxes)) {\n        Swal.fire({\n          icon: \"error\",\n          title: \"GAME OVER\"\n        });\n      }\n    },\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true,\n    trackTouch: true\n  });\n\n  return (\n    <div className=\"container\" {...handlers}>\n      <Boxes boxes={boxes} />\n    </div>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\nimport \"../style/header.css\";\n\nimport { useDispatch } from \"react-redux\";\nimport { Dispatcher } from \"../game_redux\";\n\nconst Header: React.FC = () => {\n  const dispatch = useDispatch();\n  const dispatcher = new Dispatcher(dispatch);\n\n  return (\n    <div className=\"header\">\n      <input\n        type=\"button\"\n        className=\"button\"\n        onClick={() => {\n          dispatcher.resetAll();\n          dispatcher.initRandom();\n          dispatcher.resetComAni();\n        }}\n        value=\"RESET\"\n      >\n      </input>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { store } from \"./game_redux\";\nimport { Provider } from \"react-redux\";\nimport Game from \"./components/Game\";\nimport Header from \"./components/Header\";\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <div style={{backgroundColor: '#EEE4D9', width: '100vw', height: '100vh'}}>\n        <Game />\n        <Header />\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}